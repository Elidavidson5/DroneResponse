{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/Home/Map.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MapContainer, TileLayer, useMap, Popup } from 'react-leaflet';\nimport { Marker, Circle } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction setupMarkerIcon() {\n  delete L.Icon.Default.prototype._getIconUrl;\n  L.Icon.Default.prototype._getIconUrl = function (name) {\n    return L.Icon.Default.imagePath + '/' + name + '.png';\n  };\n}\nexport default function Map() {\n  _s();\n  setupMarkerIcon();\n  const center = [33.6411, -117.8425]; // UCI Coordinates\n  const position = [51.505, -0.09];\n  const [location, setLocation] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if geolocation is available in the browser\n    if (navigator.geolocation) {\n      // Get the current position of the user\n      navigator.geolocation.getCurrentPosition(position => {\n        // Save the position to the state\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setLocation({\n          latitude,\n          longitude\n        });\n        console.log('lat', latitude);\n        console.log('long', longitude);\n      }, error => {\n        // Handle error if geolocation fails\n        setError(error.message);\n      });\n    } else {\n      setError('Geolocation is not supported by this browser.');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      style: {\n        height: \"500px\",\n        width: \"100%\"\n      },\n      center: center,\n      zoom: 13,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: center,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Your Current location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        center: center,\n        radius: 1609.34,\n        color: \"blue\",\n        fillColor: \"blue\",\n        fillOpacity: 0.2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"T1fEaCzQdoK20qLAFqfcCiHV1Ow=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","MapContainer","TileLayer","useMap","Popup","Marker","Circle","L","useState","useEffect","jsxDEV","_jsxDEV","setupMarkerIcon","Icon","Default","prototype","_getIconUrl","name","imagePath","Map","_s","center","position","location","setLocation","error","setError","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","console","log","message","children","style","height","width","zoom","scrollWheelZoom","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","radius","color","fillColor","fillOpacity","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/Home/Map.js"],"sourcesContent":["import React from 'react'\nimport { MapContainer, TileLayer, useMap, Popup } from 'react-leaflet'\nimport { Marker, Circle } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { useState, useEffect } from 'react';\n\nfunction setupMarkerIcon() {\n    delete L.Icon.Default.prototype._getIconUrl;\n    L.Icon.Default.prototype._getIconUrl = function (name) {\n        return L.Icon.Default.imagePath + '/' + name + '.png';\n    };\n}\n\n\n\nexport default function Map() {\n    setupMarkerIcon();\n    const center = [33.6411, -117.8425]; // UCI Coordinates\n    const position = [51.505, -0.09]\n    const [location, setLocation] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        // Check if geolocation is available in the browser\n        if (navigator.geolocation) {\n            // Get the current position of the user\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    // Save the position to the state\n                    const { latitude, longitude } = position.coords;\n                    setLocation({latitude, longitude});\n                    console.log('lat', latitude)\n                    console.log('long', longitude)\n\n                },\n                (error) => {\n                    // Handle error if geolocation fails\n                    setError(error.message);\n                }\n            );\n        } else {\n            setError('Geolocation is not supported by this browser.');\n        }\n\n    }, []);\n\n\n    return (\n        <div>\n            <MapContainer style={{ height: \"500px\", width: \"100%\" }} center={center} zoom={13} scrollWheelZoom={false}>\n                <TileLayer\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <Marker position={center}>\n                    <Popup>\n                        Your Current location\n                    </Popup>\n                </Marker>\n\n                {/* Correctly adding the Circle component */}\n                <Circle center={center} radius={1609.34} color=\"blue\" fillColor=\"blue\" fillOpacity={0.2} />\n            </MapContainer>\n        </div>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}