{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FullParameterList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\nimport { params } from './params'; // Adjust this import as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FullParameterList({\n  param_type\n}) {\n  _s();\n  const [keyValuePairs, setKeyValuePairs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [expandedRowKeys, setExpandedRowKeys] = useState({}); // Track expanded rows\n\n  useEffect(() => {\n    setLoading(true); // Set loading to true each time param_type changes\n\n    if (param_type === 'full') {\n      const data = params.getFullParams();\n      console.log('Fetched Data:', data); // Log the fetched data\n\n      const transformedData = transformToTree(data[0]);\n      console.log('Transformed Data:', transformedData); // Log the transformed data\n\n      setKeyValuePairs(transformedData);\n      setLoading(false);\n    } else {\n      setKeyValuePairs([]);\n      setLoading(false);\n    }\n  }, [param_type]);\n  const transformToTree = data => {\n    return Object.keys(data).map(key => ({\n      key: key,\n      value: data[key],\n      parent: null,\n      children: generateChildren(key, data[key])\n    }));\n  };\n  const generateChildren = (parentKey, parentValue) => {\n    if (typeof parentValue === 'object' && !Array.isArray(parentValue)) {\n      return Object.keys(parentValue).map(key => ({\n        key: key,\n        value: parentValue[key],\n        parent: parentKey,\n        children: generateChildren(key, parentValue[key])\n      }));\n    }\n    return [];\n  };\n\n  // Customize how children are displayed\n  const rowExpansionTemplate = node => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(node.data.value, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Update the expandedRowKeys state when rows are toggled\n  const onRowToggle = e => {\n    setExpandedRowKeys(e.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : keyValuePairs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(TreeTable, {\n      value: keyValuePairs,\n      tableStyle: {\n        minWidth: '50rem'\n      },\n      paginator: true,\n      rows: 10,\n      expandedRowKeys: expandedRowKeys // Set the expanded rows state here\n      ,\n      onRowToggle: onRowToggle // Handle row toggle action\n      ,\n      rowExpansionTemplate: rowExpansionTemplate // Define how to expand rows\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"key\",\n        header: \"key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"value\",\n        header: \"Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"parent\",\n        header: \"Parent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(FullParameterList, \"b9SHJxezZDQpwCqTB5qvORlcWeM=\");\n_c = FullParameterList;\nvar _c;\n$RefreshReg$(_c, \"FullParameterList\");","map":{"version":3,"names":["useState","useEffect","TreeTable","Column","params","jsxDEV","_jsxDEV","FullParameterList","param_type","_s","keyValuePairs","setKeyValuePairs","loading","setLoading","expandedRowKeys","setExpandedRowKeys","data","getFullParams","console","log","transformedData","transformToTree","Object","keys","map","key","value","parent","children","generateChildren","parentKey","parentValue","Array","isArray","rowExpansionTemplate","node","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","onRowToggle","e","className","length","tableStyle","minWidth","paginator","rows","field","header","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FullParameterList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\nimport { params } from './params'; // Adjust this import as needed\n\nexport default function FullParameterList({ param_type }) {\n    const [keyValuePairs, setKeyValuePairs] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [expandedRowKeys, setExpandedRowKeys] = useState({}); // Track expanded rows\n\n    useEffect(() => {\n        setLoading(true); // Set loading to true each time param_type changes\n\n        if (param_type === 'full') {\n            const data = params.getFullParams();\n            console.log('Fetched Data:', data);  // Log the fetched data\n\n            const transformedData = transformToTree(data[0]);\n            console.log('Transformed Data:', transformedData);  // Log the transformed data\n\n            setKeyValuePairs(transformedData);\n            setLoading(false);\n        } else {\n            setKeyValuePairs([]);\n            setLoading(false);\n        }\n    }, [param_type]);\n\n    const transformToTree = (data) => {\n        return Object.keys(data).map((key) => ({\n            key: key,\n            value: data[key],\n            parent: null,\n            children: generateChildren(key, data[key])\n        }));\n    };\n\n    const generateChildren = (parentKey, parentValue) => {\n        if (typeof parentValue === 'object' && !Array.isArray(parentValue)) {\n            return Object.keys(parentValue).map((key) => ({\n                key: key,\n                value: parentValue[key],\n                parent: parentKey,\n                children: generateChildren(key, parentValue[key])\n            }));\n        }\n        return [];\n    };\n\n    // Customize how children are displayed\n    const rowExpansionTemplate = (node) => {\n        return (\n            <div>\n                <strong>Details:</strong>\n                <pre>{JSON.stringify(node.data.value, null, 2)}</pre>\n            </div>\n        );\n    };\n\n    // Update the expandedRowKeys state when rows are toggled\n    const onRowToggle = (e) => {\n        setExpandedRowKeys(e.value);\n    };\n\n    return (\n        <div className=\"card\">\n            {loading ? (\n                <p>Loading data...</p>\n            ) : keyValuePairs.length === 0 ? (\n                <p>No data available.</p>\n            ) : (\n                <TreeTable\n                    value={keyValuePairs}\n                    tableStyle={{ minWidth: '50rem' }}\n                    paginator\n                    rows={10}\n                    expandedRowKeys={expandedRowKeys} // Set the expanded rows state here\n                    onRowToggle={onRowToggle} // Handle row toggle action\n                    rowExpansionTemplate={rowExpansionTemplate} // Define how to expand rows\n                >\n                    <Column field=\"key\" header=\"key\" />\n                    <Column field=\"value\" header=\"Value\" />\n                    <Column field=\"parent\" header=\"Parent\" />\n                </TreeTable>\n            )}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,MAAM,QAAQ,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,iBAAiBA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE5DC,SAAS,CAAC,MAAM;IACZY,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;IAElB,IAAIL,UAAU,KAAK,MAAM,EAAE;MACvB,MAAMQ,IAAI,GAAGZ,MAAM,CAACa,aAAa,CAAC,CAAC;MACnCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC,CAAC,CAAE;;MAErC,MAAMI,eAAe,GAAGC,eAAe,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;MAChDE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,eAAe,CAAC,CAAC,CAAE;;MAEpDT,gBAAgB,CAACS,eAAe,CAAC;MACjCP,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACHF,gBAAgB,CAAC,EAAE,CAAC;MACpBE,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,MAAMa,eAAe,GAAIL,IAAI,IAAK;IAC9B,OAAOM,MAAM,CAACC,IAAI,CAACP,IAAI,CAAC,CAACQ,GAAG,CAAEC,GAAG,KAAM;MACnCA,GAAG,EAAEA,GAAG;MACRC,KAAK,EAAEV,IAAI,CAACS,GAAG,CAAC;MAChBE,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAEC,gBAAgB,CAACJ,GAAG,EAAET,IAAI,CAACS,GAAG,CAAC;IAC7C,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAACC,SAAS,EAAEC,WAAW,KAAK;IACjD,IAAI,OAAOA,WAAW,KAAK,QAAQ,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,EAAE;MAChE,OAAOT,MAAM,CAACC,IAAI,CAACQ,WAAW,CAAC,CAACP,GAAG,CAAEC,GAAG,KAAM;QAC1CA,GAAG,EAAEA,GAAG;QACRC,KAAK,EAAEK,WAAW,CAACN,GAAG,CAAC;QACvBE,MAAM,EAAEG,SAAS;QACjBF,QAAQ,EAAEC,gBAAgB,CAACJ,GAAG,EAAEM,WAAW,CAACN,GAAG,CAAC;MACpD,CAAC,CAAC,CAAC;IACP;IACA,OAAO,EAAE;EACb,CAAC;;EAED;EACA,MAAMS,oBAAoB,GAAIC,IAAI,IAAK;IACnC,oBACI7B,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,EAAQ;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzBjC,OAAA;QAAAsB,QAAA,EAAMY,IAAI,CAACC,SAAS,CAACN,IAAI,CAACnB,IAAI,CAACU,KAAK,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAEd,CAAC;;EAED;EACA,MAAMG,WAAW,GAAIC,CAAC,IAAK;IACvB5B,kBAAkB,CAAC4B,CAAC,CAACjB,KAAK,CAAC;EAC/B,CAAC;EAED,oBACIpB,OAAA;IAAKsC,SAAS,EAAC,MAAM;IAAAhB,QAAA,EAChBhB,OAAO,gBACJN,OAAA;MAAAsB,QAAA,EAAG;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACtB7B,aAAa,CAACmC,MAAM,KAAK,CAAC,gBAC1BvC,OAAA;MAAAsB,QAAA,EAAG;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzBjC,OAAA,CAACJ,SAAS;MACNwB,KAAK,EAAEhB,aAAc;MACrBoC,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAQ,CAAE;MAClCC,SAAS;MACTC,IAAI,EAAE,EAAG;MACTnC,eAAe,EAAEA,eAAgB,CAAC;MAAA;MAClC4B,WAAW,EAAEA,WAAY,CAAC;MAAA;MAC1BR,oBAAoB,EAAEA,oBAAqB,CAAC;MAAA;MAAAN,QAAA,gBAE5CtB,OAAA,CAACH,MAAM;QAAC+C,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC;MAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCjC,OAAA,CAACH,MAAM;QAAC+C,KAAK,EAAC,OAAO;QAACC,MAAM,EAAC;MAAO;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCjC,OAAA,CAACH,MAAM;QAAC+C,KAAK,EAAC,QAAQ;QAACC,MAAM,EAAC;MAAQ;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EACd;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC9B,EAAA,CAlFuBF,iBAAiB;AAAA6C,EAAA,GAAjB7C,iBAAiB;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}