{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FlightMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FlightModes() {\n  _s();\n  // Initialize state for all flight modes\n  const [selectedFlightModes, setSelectedFlightModes] = useState(Array(6).fill(null));\n  const [checkedStates, setCheckedStates] = useState(Array(6).fill(false));\n\n  // Flight modes array\n  const flightModes = [{\n    label: 'Manual',\n    value: 'manual'\n  }, {\n    label: 'Stabilize',\n    value: 'stabilize'\n  }, {\n    label: 'Acro',\n    value: 'acro'\n  }, {\n    label: 'Altitude Hold',\n    value: 'altitude_hold'\n  }, {\n    label: 'Loiter',\n    value: 'loiter'\n  }, {\n    label: 'RTL (Return to Launch)',\n    value: 'rtl'\n  }];\n\n  // Handle change in flight mode\n  const onFlightModeChange = (e, index) => {\n    const newSelectedFlightModes = [...selectedFlightModes];\n    newSelectedFlightModes[index] = e.target.value;\n    setSelectedFlightModes(newSelectedFlightModes);\n  };\n  const onCheckboxChange = (e, index) => {\n    const newCheckedStates = [...checkedStates];\n    newCheckedStates[index] = e.target.checked;\n    setCheckedStates(newCheckedStates);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: Array.from({\n        length: 6\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex my-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-white\",\n          children: [\"Flight Mode \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"mx-8 h-8 bg-banner-color border border-white text-white\",\n          value: selectedFlightModes[index],\n          onChange: e => onFlightModeChange(e, index),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: [\"Select Flight Mode \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), flightModes.map(mode => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: mode.value,\n            children: mode.label\n          }, mode.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedStates[index],\n            onChange: e => onCheckboxChange(e, index),\n            className: \"transform scale-150\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-white text-sm\",\n            children: \"Simple\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 bg-yellow-500 w-1/2 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => console.log('make updates to drone file'),\n        children: \"Save Modes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(FlightModes, \"lySHVRXo+m21KhppA4ttBkYWOQc=\");\n_c = FlightModes;\nvar _c;\n$RefreshReg$(_c, \"FlightModes\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FlightModes","_s","selectedFlightModes","setSelectedFlightModes","Array","fill","checkedStates","setCheckedStates","flightModes","label","value","onFlightModeChange","e","index","newSelectedFlightModes","target","onCheckboxChange","newCheckedStates","checked","children","className","from","length","map","_","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","mode","type","onClick","console","log","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FlightMode.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function FlightModes() {\n    // Initialize state for all flight modes\n    const [selectedFlightModes, setSelectedFlightModes] = useState(\n        Array(6).fill(null)\n    );\n    const [checkedStates, setCheckedStates] = useState(Array(6).fill(false));\n\n\n    // Flight modes array\n    const flightModes = [\n        { label: 'Manual', value: 'manual' },\n        { label: 'Stabilize', value: 'stabilize' },\n        { label: 'Acro', value: 'acro' },\n        { label: 'Altitude Hold', value: 'altitude_hold' },\n        { label: 'Loiter', value: 'loiter' },\n        { label: 'RTL (Return to Launch)', value: 'rtl' },\n    ];\n\n    // Handle change in flight mode\n    const onFlightModeChange = (e, index) => {\n        const newSelectedFlightModes = [...selectedFlightModes];\n        newSelectedFlightModes[index] = e.target.value;\n        setSelectedFlightModes(newSelectedFlightModes);\n    };\n\n    const onCheckboxChange = (e, index) => {\n        const newCheckedStates = [...checkedStates];\n        newCheckedStates[index] = e.target.checked;\n        setCheckedStates(newCheckedStates);\n    };\n\n    return (\n        <div>\n            <div className=''>\n                {Array.from({ length: 6 }).map((_, index) => (\n                    <div className='flex my-4' key={index}>\n                        <h4 className='text-white'>Flight Mode {index + 1}</h4>\n                        <select\n                            className='mx-8 h-8 bg-banner-color border border-white text-white'\n                            value={selectedFlightModes[index]}\n                            onChange={(e) => onFlightModeChange(e, index)}\n                        >\n                            <option value=\"\" disabled>\n                                Select Flight Mode {index + 1}\n                            </option>\n                            {flightModes.map((mode) => (\n                                <option key={mode.value} value={mode.value}>\n                                    {mode.label}\n                                </option>\n                            ))}\n                        </select>\n                        <div>\n                            <input\n                                type=\"checkbox\"\n                                checked={checkedStates[index]}\n                                onChange={(e) => onCheckboxChange(e, index)}\n                                className=\"transform scale-150\"\n                            />\n                            <span className='ml-2 text-white text-sm'>\n                                Simple\n                            </span>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            <div className='border-2 bg-yellow-500 w-1/2 text-center'>\n                <span onClick={() => console.log('make updates to drone file')}>\n                    Save Modes\n                </span>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}