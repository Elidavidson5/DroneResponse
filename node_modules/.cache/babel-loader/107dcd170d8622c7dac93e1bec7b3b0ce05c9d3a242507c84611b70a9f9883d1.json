{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FlightMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Dropdown } from 'primereact/dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FlightModes() {\n  _s();\n  // Initialize state for all flight modes\n  const [selectedFlightModes, setSelectedFlightModes] = useState(Array(6).fill(null));\n\n  // Flight modes array\n  const flightModes = [{\n    label: 'Manual',\n    value: 'manual'\n  }, {\n    label: 'Stabilize',\n    value: 'stabilize'\n  }, {\n    label: 'Acro',\n    value: 'acro'\n  }, {\n    label: 'Altitude Hold',\n    value: 'altitude_hold'\n  }, {\n    label: 'Loiter',\n    value: 'loiter'\n  }, {\n    label: 'RTL (Return to Launch)',\n    value: 'rtl'\n  }];\n\n  // Handle change in flight mode\n  const onFlightModeChange = (e, index) => {\n    const newSelectedFlightModes = [...selectedFlightModes];\n    newSelectedFlightModes[index] = e.value;\n    setSelectedFlightModes(newSelectedFlightModes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Array.from({\n      length: 6\n    }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Flight Mode \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        value: selectedFlightModes[index],\n        options: flightModes,\n        onChange: e => onFlightModeChange(e, index),\n        optionLabel: \"label\",\n        optionValue: \"value\",\n        placeholder: `Select Flight Mode ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Selected Flight Modes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), selectedFlightModes.map((mode, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Flight Mode \", index + 1, \": \", mode]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(FlightModes, \"rGZQYSESMIxM2FCoePjqS/nPkIc=\");\n_c = FlightModes;\nvar _c;\n$RefreshReg$(_c, \"FlightModes\");","map":{"version":3,"names":["React","useState","Dropdown","jsxDEV","_jsxDEV","FlightModes","_s","selectedFlightModes","setSelectedFlightModes","Array","fill","flightModes","label","value","onFlightModeChange","e","index","newSelectedFlightModes","children","from","length","map","_","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","optionLabel","optionValue","placeholder","mode","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FlightMode.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dropdown } from 'primereact/dropdown';\n\nexport default function FlightModes() {\n    // Initialize state for all flight modes\n    const [selectedFlightModes, setSelectedFlightModes] = useState(\n        Array(6).fill(null)\n    );\n\n    // Flight modes array\n    const flightModes = [\n        { label: 'Manual', value: 'manual' },\n        { label: 'Stabilize', value: 'stabilize' },\n        { label: 'Acro', value: 'acro' },\n        { label: 'Altitude Hold', value: 'altitude_hold' },\n        { label: 'Loiter', value: 'loiter' },\n        { label: 'RTL (Return to Launch)', value: 'rtl' },\n    ];\n\n    // Handle change in flight mode\n    const onFlightModeChange = (e, index) => {\n        const newSelectedFlightModes = [...selectedFlightModes];\n        newSelectedFlightModes[index] = e.value;\n        setSelectedFlightModes(newSelectedFlightModes);\n    };\n\n    return (\n        <div>\n            \n            {Array.from({ length: 6 }).map((_, index) => (\n                <div key={index}>\n                    <h4>Flight Mode {index + 1}</h4>\n                    <Dropdown\n                        value={selectedFlightModes[index]}\n                        options={flightModes}\n                        onChange={(e) => onFlightModeChange(e, index)}\n                        optionLabel=\"label\"\n                        optionValue=\"value\"\n                        placeholder={`Select Flight Mode ${index + 1}`}\n                    />\n                </div>\n            ))}\n\n            {/* Display the selected flight modes */}\n            <div>\n                <h4>Selected Flight Modes:</h4>\n                {selectedFlightModes.map((mode, index) => (\n                    <p key={index}>Flight Mode {index + 1}: {mode}</p>\n                ))}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}