{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/Home/Map.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MapContainer, TileLayer, useMap, Popup } from 'react-leaflet';\nimport { Marker, Circle } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { useState, useEffect } from 'react';\nimport drone from '../images/drone.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const center = [33.6411, -117.8425]; // UCI Coordinates\n  const position = [51.505, -0.09];\n  const [location, setLocation] = useState(null);\n  const [userLocation, setUserLocation] = useState(center);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if geolocation is available in the browser\n    if (navigator.geolocation) {\n      // Get the current position of the user\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setLocation({\n          latitude,\n          longitude\n        });\n        setUserLocation([latitude, longitude]);\n      }, error => {\n        setError(error.message);\n      });\n    } else {\n      setError('Geolocation is not supported by this browser.');\n    }\n  }, []);\n  useEffect(() => {\n    console.log('user location', userLocation);\n  }, [userLocation]);\n  const markerIcon = new L.Icon({\n    iconUrl: drone,\n    // Use the imported image as the icon URL\n    iconSize: [32, 32],\n    // Customize the size of the icon\n    iconAnchor: [16, 32],\n    // Anchor point of the icon\n    popupAnchor: [0, -32] // Popup anchor point\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userLocation ? /*#__PURE__*/_jsxDEV(MapContainer, {\n      style: {\n        height: \"500px\",\n        width: \"100%\"\n      },\n      center: userLocation,\n      zoom: 13,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: center,\n        icon: markerIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Your Current location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        center: center,\n        radius: 1609.34,\n        color: \"blue\",\n        fillColor: \"blue\",\n        fillOpacity: 0.2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"VPWcXG5yX6VKYQCy6pTURQZDe7o=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","MapContainer","TileLayer","useMap","Popup","Marker","Circle","L","useState","useEffect","drone","jsxDEV","_jsxDEV","Map","_s","center","position","location","setLocation","userLocation","setUserLocation","error","setError","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","message","console","log","markerIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","children","style","height","width","zoom","scrollWheelZoom","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","icon","radius","color","fillColor","fillOpacity","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/Home/Map.js"],"sourcesContent":["import React from 'react'\nimport { MapContainer, TileLayer, useMap, Popup } from 'react-leaflet'\nimport { Marker, Circle } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { useState, useEffect } from 'react';\nimport drone from '../images/drone.png'\n\n\n\nexport default function Map() {\n\n\n    const center = [33.6411, -117.8425]; // UCI Coordinates\n    const position = [51.505, -0.09]\n    const [location, setLocation] = useState(null);\n    const [userLocation, setUserLocation] = useState(center)\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        // Check if geolocation is available in the browser\n        if (navigator.geolocation) {\n            // Get the current position of the user\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const { latitude, longitude } = position.coords;\n                    setLocation({ latitude, longitude });\n                    setUserLocation([latitude, longitude])\n\n                },\n                (error) => {\n                    setError(error.message);\n                }\n            );\n        } else {\n            setError('Geolocation is not supported by this browser.');\n        }\n\n\n    }, []);\n\n    useEffect(() => {\n        console.log('user location', userLocation)\n    }, [userLocation])\n\n\n    const markerIcon = new L.Icon({\n        iconUrl: drone,  // Use the imported image as the icon URL\n        iconSize: [32, 32],  // Customize the size of the icon\n        iconAnchor: [16, 32],  // Anchor point of the icon\n        popupAnchor: [0, -32],  // Popup anchor point\n    });\n\n    return (\n        <div>\n            {\n                userLocation ?\n                    <MapContainer style={{ height: \"500px\", width: \"100%\" }} center={userLocation} zoom={13} scrollWheelZoom={false}>\n                        <TileLayer\n                            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        <Marker position={center} icon={markerIcon}>\n                            <Popup>\n                                Your Current location\n                            </Popup>\n                        </Marker>\n\n                        {/* Correctly adding the Circle component */}\n                        <Circle center={center} radius={1609.34} color=\"blue\" fillColor=\"blue\" fillOpacity={0.2} />\n                    </MapContainer>\n                    :\n                    ''\n            }\n        </div>\n\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,SAASC,MAAM,EAAEC,MAAM,QAAQ,eAAe;AAC9C,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;AACvB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIvC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAG1B,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACO,MAAM,CAAC;EACxD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ;IACA,IAAIc,SAAS,CAACC,WAAW,EAAE;MACvB;MACAD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACnCT,QAAQ,IAAK;QACV,MAAM;UAAEU,QAAQ;UAAEC;QAAU,CAAC,GAAGX,QAAQ,CAACY,MAAM;QAC/CV,WAAW,CAAC;UAAEQ,QAAQ;UAAEC;QAAU,CAAC,CAAC;QACpCP,eAAe,CAAC,CAACM,QAAQ,EAAEC,SAAS,CAAC,CAAC;MAE1C,CAAC,EACAN,KAAK,IAAK;QACPC,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC;MAC3B,CACJ,CAAC;IACL,CAAC,MAAM;MACHP,QAAQ,CAAC,+CAA+C,CAAC;IAC7D;EAGJ,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACZqB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEZ,YAAY,CAAC;EAC9C,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAGlB,MAAMa,UAAU,GAAG,IAAIzB,CAAC,CAAC0B,IAAI,CAAC;IAC1BC,OAAO,EAAExB,KAAK;IAAG;IACjByB,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAAG;IACrBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAAG;IACvBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG;EAC5B,CAAC,CAAC;EAEF,oBACIzB,OAAA;IAAA0B,QAAA,EAEQnB,YAAY,gBACRP,OAAA,CAACX,YAAY;MAACsC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAC1B,MAAM,EAAEI,YAAa;MAACuB,IAAI,EAAE,EAAG;MAACC,eAAe,EAAE,KAAM;MAAAL,QAAA,gBAC5G1B,OAAA,CAACV,SAAS;QACN0C,WAAW,EAAC,yFAAyF;QACrGC,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACFrC,OAAA,CAACP,MAAM;QAACW,QAAQ,EAAED,MAAO;QAACmC,IAAI,EAAElB,UAAW;QAAAM,QAAA,eACvC1B,OAAA,CAACR,KAAK;UAAAkC,QAAA,EAAC;QAEP;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGTrC,OAAA,CAACN,MAAM;QAACS,MAAM,EAAEA,MAAO;QAACoC,MAAM,EAAE,OAAQ;QAACC,KAAK,EAAC,MAAM;QAACC,SAAS,EAAC,MAAM;QAACC,WAAW,EAAE;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,GAEf;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAET,CAAC;AAGd;AAACnC,EAAA,CAnEuBD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}