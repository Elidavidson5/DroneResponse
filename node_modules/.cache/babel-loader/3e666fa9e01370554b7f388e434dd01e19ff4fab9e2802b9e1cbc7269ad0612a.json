{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FlightMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Toast } from 'primereact/toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FlightModes() {\n  _s();\n  // Initialize state for all flight modes\n  const [selectedFlightModes, setSelectedFlightModes] = useState(Array(6).fill(null));\n  const [checkedStates, setCheckedStates] = useState(Array(6).fill(false));\n  const toast = useRef(null);\n  const show = message => {\n    toast.current.show({\n      severity: 'info',\n      summary: 'Info',\n      detail: message\n    });\n  };\n  const uploadFlightModes = (flightModes, checkedStates) => {\n    axios.post('http://localhost:4000/upload-flightmodes', {\n      flightModes: selectedFlightModes,\n      checkedStates: checkedStates\n    }).then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  // Flight modes array\n  const flightModes = [{\n    label: 'Manual',\n    value: 'manual'\n  }, {\n    label: 'Stabilize',\n    value: 'stabilize'\n  }, {\n    label: 'Acro',\n    value: 'acro'\n  }, {\n    label: 'Altitude Hold',\n    value: 'altitude_hold'\n  }, {\n    label: 'Loiter',\n    value: 'loiter'\n  }, {\n    label: 'RTL (Return to Launch)',\n    value: 'rtl'\n  }];\n\n  // Handle change in flight mode\n  const onFlightModeChange = (e, index) => {\n    const newSelectedFlightModes = [...selectedFlightModes];\n    newSelectedFlightModes[index] = e.target.value;\n    setSelectedFlightModes(newSelectedFlightModes);\n  };\n  const onCheckboxChange = (e, index) => {\n    const newCheckedStates = [...checkedStates];\n    newCheckedStates[index] = e.target.checked;\n    setCheckedStates(newCheckedStates);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: Array.from({\n        length: 6\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex my-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-white\",\n          children: [\"Flight Mode \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"mx-8 h-8 bg-banner-color border border-white text-white\",\n          value: selectedFlightModes[index],\n          onChange: e => onFlightModeChange(e, index),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: [\"Select Flight Mode \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), flightModes.map(mode => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: mode.value,\n            children: mode.label\n          }, mode.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedStates[index],\n            onChange: e => onCheckboxChange(e, index),\n            className: \"transform scale-150\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-white text-sm\",\n            children: \"Simple\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 bg-yellow-500 w-1/2 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => uploadFlightModes(flightModes, checkedStates),\n        children: \"Save Modes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(FlightModes, \"3FdaM8llQVa1zNBtr87rhWNf2Po=\");\n_c = FlightModes;\nvar _c;\n$RefreshReg$(_c, \"FlightModes\");","map":{"version":3,"names":["React","useState","useRef","axios","Toast","jsxDEV","_jsxDEV","FlightModes","_s","selectedFlightModes","setSelectedFlightModes","Array","fill","checkedStates","setCheckedStates","toast","show","message","current","severity","summary","detail","uploadFlightModes","flightModes","post","then","res","console","log","data","catch","error","label","value","onFlightModeChange","e","index","newSelectedFlightModes","target","onCheckboxChange","newCheckedStates","checked","children","className","from","length","map","_","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","mode","type","onClick","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FlightMode.js"],"sourcesContent":["import React, { useState,useRef } from 'react';\nimport axios from 'axios';\nimport { Toast } from 'primereact/toast';\n\nexport default function FlightModes() {\n    // Initialize state for all flight modes\n    const [selectedFlightModes, setSelectedFlightModes] = useState(\n        Array(6).fill(null)\n    );\n    const [checkedStates, setCheckedStates] = useState(Array(6).fill(false));\n\n    const toast = useRef(null);\n\n    const show = (message) => {\n        toast.current.show({ severity: 'info', summary: 'Info', detail: message });\n    };\n\n\n    const uploadFlightModes = (flightModes, checkedStates) => {\n        axios.post('http://localhost:4000/upload-flightmodes', {\n            flightModes: selectedFlightModes,\n            checkedStates: checkedStates\n        }).then((res) => {\n            console.log(res.data);\n        }).catch((error) => {\n            console.log(error);\n        });\n    };\n\n\n    // Flight modes array\n    const flightModes = [\n        { label: 'Manual', value: 'manual' },\n        { label: 'Stabilize', value: 'stabilize' },\n        { label: 'Acro', value: 'acro' },\n        { label: 'Altitude Hold', value: 'altitude_hold' },\n        { label: 'Loiter', value: 'loiter' },\n        { label: 'RTL (Return to Launch)', value: 'rtl' },\n    ];\n\n    // Handle change in flight mode\n    const onFlightModeChange = (e, index) => {\n        const newSelectedFlightModes = [...selectedFlightModes];\n        newSelectedFlightModes[index] = e.target.value;\n        setSelectedFlightModes(newSelectedFlightModes);\n    };\n\n    const onCheckboxChange = (e, index) => {\n        const newCheckedStates = [...checkedStates];\n        newCheckedStates[index] = e.target.checked;\n        setCheckedStates(newCheckedStates);\n    };\n\n    return (\n        <div>\n            <div className=''>\n                {Array.from({ length: 6 }).map((_, index) => (\n                    <div className='flex my-4' key={index}>\n                        <h4 className='text-white'>Flight Mode {index + 1}</h4>\n                        <select\n                            className='mx-8 h-8 bg-banner-color border border-white text-white'\n                            value={selectedFlightModes[index]}\n                            onChange={(e) => onFlightModeChange(e, index)}\n                        >\n                            <option value=\"\" disabled>\n                                Select Flight Mode {index + 1}\n                            </option>\n                            {flightModes.map((mode) => (\n                                <option key={mode.value} value={mode.value}>\n                                    {mode.label}\n                                </option>\n                            ))}\n                        </select>\n                        <div>\n                            <input\n                                type=\"checkbox\"\n                                checked={checkedStates[index]}\n                                onChange={(e) => onCheckboxChange(e, index)}\n                                className=\"transform scale-150\"\n                            />\n                            <span className='ml-2 text-white text-sm'>\n                                Simple\n                            </span>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            <div className='border-2 bg-yellow-500 w-1/2 text-center'>\n                <span onClick={() => uploadFlightModes(flightModes, checkedStates)}>\n                    Save Modes\n                </span>\n            </div>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,MAAM,QAAQ,OAAO;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGT,QAAQ,CAC1DU,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CACtB,CAAC;EACD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC;EAExE,MAAMG,KAAK,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE1B,MAAMc,IAAI,GAAIC,OAAO,IAAK;IACtBF,KAAK,CAACG,OAAO,CAACF,IAAI,CAAC;MAAEG,QAAQ,EAAE,MAAM;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAEJ;IAAQ,CAAC,CAAC;EAC9E,CAAC;EAGD,MAAMK,iBAAiB,GAAGA,CAACC,WAAW,EAAEV,aAAa,KAAK;IACtDV,KAAK,CAACqB,IAAI,CAAC,0CAA0C,EAAE;MACnDD,WAAW,EAAEd,mBAAmB;MAChCI,aAAa,EAAEA;IACnB,CAAC,CAAC,CAACY,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;IACzB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;;EAGD;EACA,MAAMR,WAAW,GAAG,CAChB;IAAES,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,eAAe;IAAEC,KAAK,EAAE;EAAgB,CAAC,EAClD;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,wBAAwB;IAAEC,KAAK,EAAE;EAAM,CAAC,CACpD;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IACrC,MAAMC,sBAAsB,GAAG,CAAC,GAAG5B,mBAAmB,CAAC;IACvD4B,sBAAsB,CAACD,KAAK,CAAC,GAAGD,CAAC,CAACG,MAAM,CAACL,KAAK;IAC9CvB,sBAAsB,CAAC2B,sBAAsB,CAAC;EAClD,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAACJ,CAAC,EAAEC,KAAK,KAAK;IACnC,MAAMI,gBAAgB,GAAG,CAAC,GAAG3B,aAAa,CAAC;IAC3C2B,gBAAgB,CAACJ,KAAK,CAAC,GAAGD,CAAC,CAACG,MAAM,CAACG,OAAO;IAC1C3B,gBAAgB,CAAC0B,gBAAgB,CAAC;EACtC,CAAC;EAED,oBACIlC,OAAA;IAAAoC,QAAA,gBACIpC,OAAA;MAAKqC,SAAS,EAAC,EAAE;MAAAD,QAAA,EACZ/B,KAAK,CAACiC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEX,KAAK,kBACpC9B,OAAA;QAAKqC,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACtBpC,OAAA;UAAIqC,SAAS,EAAC,YAAY;UAAAD,QAAA,GAAC,cAAY,EAACN,KAAK,GAAG,CAAC;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvD7C,OAAA;UACIqC,SAAS,EAAC,yDAAyD;UACnEV,KAAK,EAAExB,mBAAmB,CAAC2B,KAAK,CAAE;UAClCgB,QAAQ,EAAGjB,CAAC,IAAKD,kBAAkB,CAACC,CAAC,EAAEC,KAAK,CAAE;UAAAM,QAAA,gBAE9CpC,OAAA;YAAQ2B,KAAK,EAAC,EAAE;YAACoB,QAAQ;YAAAX,QAAA,GAAC,qBACH,EAACN,KAAK,GAAG,CAAC;UAAA;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,EACR5B,WAAW,CAACuB,GAAG,CAAEQ,IAAI,iBAClBhD,OAAA;YAAyB2B,KAAK,EAAEqB,IAAI,CAACrB,KAAM;YAAAS,QAAA,EACtCY,IAAI,CAACtB;UAAK,GADFsB,IAAI,CAACrB,KAAK;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEf,CACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACT7C,OAAA;UAAAoC,QAAA,gBACIpC,OAAA;YACIiD,IAAI,EAAC,UAAU;YACfd,OAAO,EAAE5B,aAAa,CAACuB,KAAK,CAAE;YAC9BgB,QAAQ,EAAGjB,CAAC,IAAKI,gBAAgB,CAACJ,CAAC,EAAEC,KAAK,CAAE;YAC5CO,SAAS,EAAC;UAAqB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eACF7C,OAAA;YAAMqC,SAAS,EAAC,yBAAyB;YAAAD,QAAA,EAAC;UAE1C;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GA1BsBf,KAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA2BhC,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAEN7C,OAAA;MAAKqC,SAAS,EAAC,0CAA0C;MAAAD,QAAA,eACrDpC,OAAA;QAAMkD,OAAO,EAAEA,CAAA,KAAMlC,iBAAiB,CAACC,WAAW,EAAEV,aAAa,CAAE;QAAA6B,QAAA,EAAC;MAEpE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3C,EAAA,CA3FuBD,WAAW;AAAAkD,EAAA,GAAXlD,WAAW;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}