{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FlightMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Dropdown } from 'primereact/dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FlightMode() {\n  _s();\n  // State to keep track of selected flight mode\n  const [selectedFlightMode, setSelectedFlightMode] = useState(null);\n\n  // Flight modes array\n  const flightModes = [{\n    label: 'Manual',\n    value: 'manual'\n  }, {\n    label: 'Stabilize',\n    value: 'stabilize'\n  }, {\n    label: 'Acro',\n    value: 'acro'\n  }, {\n    label: 'Altitude Hold',\n    value: 'altitude_hold'\n  }, {\n    label: 'Loiter',\n    value: 'loiter'\n  }, {\n    label: 'RTL (Return to Launch)',\n    value: 'rtl'\n  }];\n\n  // Handle change in flight mode\n  const onFlightModeChange = e => {\n    setSelectedFlightMode(e.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Flight Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      value: selectedFlightMode,\n      options: flightModes,\n      onChange: onFlightModeChange,\n      optionLabel: \"label\" // Define what part of the object to display in the dropdown\n      ,\n      optionValue: \"value\" // Define what part of the object is the value\n      ,\n      placeholder: \"Select a Flight Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedFlightMode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Flight Mode: \", selectedFlightMode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(FlightMode, \"cSQwHl32vEOSF7a0O1fVQ+6Tsjk=\");\n_c = FlightMode;\nvar _c;\n$RefreshReg$(_c, \"FlightMode\");","map":{"version":3,"names":["React","useState","Dropdown","jsxDEV","_jsxDEV","FlightMode","_s","selectedFlightMode","setSelectedFlightMode","flightModes","label","value","onFlightModeChange","e","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","optionLabel","optionValue","placeholder","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FlightMode.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dropdown } from 'primereact/dropdown';\n\nexport default function FlightMode() {\n  // State to keep track of selected flight mode\n  const [selectedFlightMode, setSelectedFlightMode] = useState(null);\n\n  // Flight modes array\n  const flightModes = [\n    { label: 'Manual', value: 'manual' },\n    { label: 'Stabilize', value: 'stabilize' },\n    { label: 'Acro', value: 'acro' },\n    { label: 'Altitude Hold', value: 'altitude_hold' },\n    { label: 'Loiter', value: 'loiter' },\n    { label: 'RTL (Return to Launch)', value: 'rtl' },\n  ];\n\n  // Handle change in flight mode\n  const onFlightModeChange = (e) => {\n    setSelectedFlightMode(e.value);\n  };\n\n  return (\n    <div>\n      <h3>Select Flight Mode</h3>\n      <Dropdown\n        value={selectedFlightMode}\n        options={flightModes}\n        onChange={onFlightModeChange}\n        optionLabel=\"label\" // Define what part of the object to display in the dropdown\n        optionValue=\"value\" // Define what part of the object is the value\n        placeholder=\"Select a Flight Mode\"\n      />\n      <div>\n        {selectedFlightMode && <p>Selected Flight Mode: {selectedFlightMode}</p>}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC;EACA,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAElE;EACA,MAAMQ,WAAW,GAAG,CAClB;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,eAAe;IAAEC,KAAK,EAAE;EAAgB,CAAC,EAClD;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,wBAAwB;IAAEC,KAAK,EAAE;EAAM,CAAC,CAClD;;EAED;EACA,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAChCL,qBAAqB,CAACK,CAAC,CAACF,KAAK,CAAC;EAChC,CAAC;EAED,oBACEP,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bd,OAAA,CAACF,QAAQ;MACPS,KAAK,EAAEJ,kBAAmB;MAC1BY,OAAO,EAAEV,WAAY;MACrBW,QAAQ,EAAER,kBAAmB;MAC7BS,WAAW,EAAC,OAAO,CAAC;MAAA;MACpBC,WAAW,EAAC,OAAO,CAAC;MAAA;MACpBC,WAAW,EAAC;IAAsB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFd,OAAA;MAAAU,QAAA,EACGP,kBAAkB,iBAAIH,OAAA;QAAAU,QAAA,GAAG,wBAAsB,EAACP,kBAAkB;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CAnCuBD,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}