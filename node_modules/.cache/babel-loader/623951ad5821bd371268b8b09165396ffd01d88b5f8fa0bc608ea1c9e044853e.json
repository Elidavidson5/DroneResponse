{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/DroneSetup/DroneSetup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from 'primereact/button';\nimport axios from 'axios';\nimport { Toast } from 'primereact/toast';\n\n/* \nDo any drone and camera setup here\n1. Button to connect to drone. call the /connect api to connect to it\n2. after the drone is connected, In the Home Tab, we can call the /get-drone-status to get the battery status\n3. In here, display the connection status of camera and drone\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DroneSetup() {\n  _s();\n  const [droneConnected, setDroneConnected] = useState(false);\n  const [batteryStatus, setBatteryStatus] = useState(null);\n  const Connect_drone = () => {\n    axios.get('http//localhost:5000/connect-drone').then(res => {\n      console.log(res.data.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full grid justify-end pr-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-2 bg-gray-500 drop-shadow-lg text-yellow-400 hover:bg-gray-600\",\n        icon: `${droneConnected ? 'pi pi-lock' : 'pi pi-lock-open'}`,\n        rounded: true,\n        outlined: true,\n        onClick: () => setDroneConnected(!droneConnected),\n        severity: \"success\",\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(DroneSetup, \"ITHU4M+hRNlPTNi3HNjGuqmkLHs=\");\n_c = DroneSetup;\nvar _c;\n$RefreshReg$(_c, \"DroneSetup\");","map":{"version":3,"names":["React","useState","Button","axios","Toast","jsxDEV","_jsxDEV","DroneSetup","_s","droneConnected","setDroneConnected","batteryStatus","setBatteryStatus","Connect_drone","get","then","res","console","log","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","rounded","outlined","onClick","severity","size","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/DroneSetup/DroneSetup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button } from 'primereact/button';\nimport axios from 'axios';\nimport { Toast } from 'primereact/toast';\n\n/* \nDo any drone and camera setup here\n1. Button to connect to drone. call the /connect api to connect to it\n2. after the drone is connected, In the Home Tab, we can call the /get-drone-status to get the battery status\n3. In here, display the connection status of camera and drone\n */\n\nexport default function DroneSetup() {\n    const [droneConnected, setDroneConnected] = useState(false);\n    const [batteryStatus, setBatteryStatus] = useState(null);\n\n    const Connect_drone = () => {\n        axios.get('http//localhost:5000/connect-drone').then((res) => {\n            console.log(res.data.message)\n        })\n    }\n\n\n    return (\n        <div className=\"text-white\">\n            <div className=\"w-full grid justify-end pr-4\">\n                <span>Connect</span>\n                <Button\n                    className=\"mt-2 bg-gray-500 drop-shadow-lg text-yellow-400 hover:bg-gray-600\"\n                    icon={`${droneConnected ? 'pi pi-lock' : 'pi pi-lock-open'}`}\n                    rounded\n                    outlined\n                    onClick={() => setDroneConnected(!droneConnected)}\n                    severity=\"success\"\n                    size={25}\n                />\n            </div>\n\n\n\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,kBAAkB;;AAExC;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAOA,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMY,aAAa,GAAGA,CAAA,KAAM;IACxBV,KAAK,CAACW,GAAG,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MAC1DC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC;EACN,CAAC;EAGD,oBACId,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,eACvBhB,OAAA;MAAKe,SAAS,EAAC,8BAA8B;MAAAC,QAAA,gBACzChB,OAAA;QAAAgB,QAAA,EAAM;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpBpB,OAAA,CAACJ,MAAM;QACHmB,SAAS,EAAC,mEAAmE;QAC7EM,IAAI,EAAE,GAAGlB,cAAc,GAAG,YAAY,GAAG,iBAAiB,EAAG;QAC7DmB,OAAO;QACPC,QAAQ;QACRC,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAAC,CAACD,cAAc,CAAE;QAClDsB,QAAQ,EAAC,SAAS;QAClBC,IAAI,EAAE;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIL,CAAC;AAEd;AAAClB,EAAA,CA9BuBD,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}