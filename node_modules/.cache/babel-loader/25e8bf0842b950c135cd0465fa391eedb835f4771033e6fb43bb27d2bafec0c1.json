{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FullParameterList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FullParameterList({\n  param_type\n}) {\n  _s();\n  const [keyValuePairs, setKeyValuePairs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [expandedRowKeys, setExpandedRowKeys] = useState({}); // Track expanded rows\n\n  useEffect(() => {\n    setLoading(true); // Set loading to true each time param_type changes\n\n    if (param_type === 'full') {\n      const data = getTestData(); // Fetch or simulate your data\n      const transformedData = transformToTree(data[0]);\n      setKeyValuePairs(transformedData);\n      setLoading(false);\n    } else {\n      setKeyValuePairs([]);\n      setLoading(false);\n    }\n  }, [param_type]);\n\n  // Simulate getting test data\n  const getTestData = () => {\n    return [{\n      key: '0',\n      label: 'Documents',\n      data: 'Documents Folder',\n      icon: 'pi pi-fw pi-inbox',\n      children: [{\n        key: '0-0',\n        label: 'Work',\n        data: 'Work Folder',\n        icon: 'pi pi-fw pi-cog',\n        children: [{\n          key: '0-0-0',\n          label: 'Expenses.doc',\n          icon: 'pi pi-fw pi-file',\n          data: 'Expenses Document'\n        }, {\n          key: '0-0-1',\n          label: 'Resume.doc',\n          icon: 'pi pi-fw pi-file',\n          data: 'Resume Document'\n        }]\n      }, {\n        key: '0-1',\n        label: 'Home',\n        data: 'Home Folder',\n        icon: 'pi pi-fw pi-home',\n        children: [{\n          key: '0-1-0',\n          label: 'Invoices.txt',\n          icon: 'pi pi-fw pi-file',\n          data: 'Invoices for this month'\n        }]\n      }]\n    }];\n  };\n  const transformToTree = data => {\n    // The data is already in the correct format, so just return it\n    return data;\n  };\n\n  // Handle row expansion\n  const onRowToggle = e => {\n    setExpandedRowKeys(e.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : keyValuePairs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(TreeTable, {\n      value: keyValuePairs,\n      tableStyle: {\n        minWidth: '50rem'\n      },\n      paginator: true,\n      rows: 10,\n      expandedRowKeys: expandedRowKeys,\n      onRowToggle: onRowToggle,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"label\",\n        header: \"Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"data\",\n        header: \"Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"icon\",\n        header: \"Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(FullParameterList, \"b9SHJxezZDQpwCqTB5qvORlcWeM=\");\n_c = FullParameterList;\nvar _c;\n$RefreshReg$(_c, \"FullParameterList\");","map":{"version":3,"names":["useState","useEffect","TreeTable","Column","jsxDEV","_jsxDEV","FullParameterList","param_type","_s","keyValuePairs","setKeyValuePairs","loading","setLoading","expandedRowKeys","setExpandedRowKeys","data","getTestData","transformedData","transformToTree","key","label","icon","children","onRowToggle","e","value","className","fileName","_jsxFileName","lineNumber","columnNumber","length","tableStyle","minWidth","paginator","rows","field","header","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FullParameterList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\n\nexport default function FullParameterList({ param_type }) {\n    const [keyValuePairs, setKeyValuePairs] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [expandedRowKeys, setExpandedRowKeys] = useState({}); // Track expanded rows\n\n    useEffect(() => {\n        setLoading(true); // Set loading to true each time param_type changes\n\n        if (param_type === 'full') {\n            const data = getTestData(); // Fetch or simulate your data\n            const transformedData = transformToTree(data[0]);\n            setKeyValuePairs(transformedData);\n            setLoading(false);\n        } else {\n            setKeyValuePairs([]);\n            setLoading(false);\n        }\n    }, [param_type]);\n\n    // Simulate getting test data\n    const getTestData = () => {\n        return [\n            {\n                key: '0',\n                label: 'Documents',\n                data: 'Documents Folder',\n                icon: 'pi pi-fw pi-inbox',\n                children: [\n                    {\n                        key: '0-0',\n                        label: 'Work',\n                        data: 'Work Folder',\n                        icon: 'pi pi-fw pi-cog',\n                        children: [\n                            { key: '0-0-0', label: 'Expenses.doc', icon: 'pi pi-fw pi-file', data: 'Expenses Document' },\n                            { key: '0-0-1', label: 'Resume.doc', icon: 'pi pi-fw pi-file', data: 'Resume Document' }\n                        ]\n                    },\n                    {\n                        key: '0-1',\n                        label: 'Home',\n                        data: 'Home Folder',\n                        icon: 'pi pi-fw pi-home',\n                        children: [\n                            { key: '0-1-0', label: 'Invoices.txt', icon: 'pi pi-fw pi-file', data: 'Invoices for this month' }\n                        ]\n                    }\n                ]\n            }\n        ];\n    };\n\n    const transformToTree = (data) => {\n        // The data is already in the correct format, so just return it\n        return data;\n    };\n\n    // Handle row expansion\n    const onRowToggle = (e) => {\n        setExpandedRowKeys(e.value);\n    };\n\n    return (\n        <div className=\"card\">\n            {loading ? (\n                <p>Loading data...</p>\n            ) : keyValuePairs.length === 0 ? (\n                <p>No data available.</p>\n            ) : (\n                <TreeTable\n                    value={keyValuePairs}\n                    tableStyle={{ minWidth: '50rem' }}\n                    paginator\n                    rows={10}\n                    expandedRowKeys={expandedRowKeys}\n                    onRowToggle={onRowToggle}\n                >\n                    <Column field=\"label\" header=\"Label\" />\n                    <Column field=\"data\" header=\"Data\" />\n                    <Column field=\"icon\" header=\"Icon\" />\n                </TreeTable>\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}