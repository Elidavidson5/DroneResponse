{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FullParameterList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\nimport { params } from './params'; // Assuming params is correctly imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FullParameterList({\n  param_type\n}) {\n  _s();\n  const [keyValuePairs, setKeyValuePairs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true); // Set loading to true each time param_type changes\n\n    if (param_type === 'standard') {\n      /*    const data = params.getStandardParams();\n         const transformedData = Object.keys(data[0]).map(key => ({\n             key: key,\n             value: data[0][key]\n         }));\n         setKeyValuePairs(transformedData); */\n      setLoading(false);\n    } else if (param_type === 'advanced') {\n      console.log('Fetching advanced params...');\n      // Example: simulate empty data for now\n      setKeyValuePairs([]);\n      setLoading(false);\n    } else if (param_type === 'full') {\n      const data = params.getFullParams();\n      setKeyValuePairs(data);\n      setLoading(false);\n    }\n  }, [param_type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) // Add a loading message\n    : keyValuePairs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) // Handle empty data case\n    : /*#__PURE__*/_jsxDEV(DataTable, {\n      value: keyValuePairs,\n      tableStyle: {\n        minWidth: '50rem'\n      },\n      paginator: true,\n      rows: 10,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"Name\",\n        header: \"Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"Value\",\n        header: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"Units\",\n        header: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"Options\",\n        header: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(FullParameterList, \"f9VCtKnjf6N/FpDgzfuctULYjig=\");\n_c = FullParameterList;\nvar _c;\n$RefreshReg$(_c, \"FullParameterList\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","TreeTable","Column","params","jsxDEV","_jsxDEV","FullParameterList","param_type","_s","keyValuePairs","setKeyValuePairs","loading","setLoading","console","log","data","getFullParams","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","value","tableStyle","minWidth","paginator","rows","field","header","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FullParameterList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\nimport { params } from './params'; // Assuming params is correctly imported\n\nexport default function FullParameterList({ param_type }) {\n    const [keyValuePairs, setKeyValuePairs] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setLoading(true); // Set loading to true each time param_type changes\n\n        if (param_type === 'standard') {\n            \n         /*    const data = params.getStandardParams();\n            const transformedData = Object.keys(data[0]).map(key => ({\n                key: key,\n                value: data[0][key]\n            }));\n            setKeyValuePairs(transformedData); */\n            setLoading(false);\n        } else if (param_type === 'advanced') {\n            console.log('Fetching advanced params...');\n            // Example: simulate empty data for now\n            setKeyValuePairs([]);\n            setLoading(false);\n        } else if (param_type === 'full') {\n            const data = params.getFullParams();\n            setKeyValuePairs(data);\n            setLoading(false);\n        }\n    }, [param_type]);\n\n    return (\n        <div className=\"card\">\n            {loading ? (\n                <p>Loading data...</p> // Add a loading message\n            ) : keyValuePairs.length === 0 ? (\n                <p>No data available.</p> // Handle empty data case\n            ) : (\n                <DataTable value={keyValuePairs} tableStyle={{ minWidth: '50rem' }} paginator rows={10}>\n                    <Column field=\"Name\" header=\"Code\" />\n                    <Column field=\"Value\" header=\"Name\" />\n                    <Column field=\"Units\" header=\"Category\" />\n                    <Column field=\"Options\" header=\"Quantity\" />\n                </DataTable>\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}