{"ast":null,"code":"var _jsxFileName = \"/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FlightMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FlightModes() {\n  _s();\n  // Initialize state for all flight modes\n  const [selectedFlightModes, setSelectedFlightModes] = useState(Array(6).fill(null));\n\n  // Flight modes array\n  const flightModes = [{\n    label: 'Manual',\n    value: 'manual'\n  }, {\n    label: 'Stabilize',\n    value: 'stabilize'\n  }, {\n    label: 'Acro',\n    value: 'acro'\n  }, {\n    label: 'Altitude Hold',\n    value: 'altitude_hold'\n  }, {\n    label: 'Loiter',\n    value: 'loiter'\n  }, {\n    label: 'RTL (Return to Launch)',\n    value: 'rtl'\n  }];\n\n  // Handle change in flight mode\n  const onFlightModeChange = (e, index) => {\n    const newSelectedFlightModes = [...selectedFlightModes];\n    newSelectedFlightModes[index] = e.target.value;\n    setSelectedFlightModes(newSelectedFlightModes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: Array.from({\n        length: 6\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex my-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-white\",\n          children: [\"Flight Mode \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"mx-4 h-8\",\n          value: selectedFlightModes[index],\n          onChange: e => onFlightModeChange(e, index),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: [\"Select Flight Mode \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), flightModes.map(mode => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: mode.value,\n            children: mode.label\n          }, mode.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 bg-yellow-500 w-1/2 text-center\",\n      children: \"Save Modes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(FlightModes, \"rGZQYSESMIxM2FCoePjqS/nPkIc=\");\n_c = FlightModes;\nvar _c;\n$RefreshReg$(_c, \"FlightModes\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FlightModes","_s","selectedFlightModes","setSelectedFlightModes","Array","fill","flightModes","label","value","onFlightModeChange","e","index","newSelectedFlightModes","target","children","className","from","length","map","_","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","mode","_c","$RefreshReg$"],"sources":["/Users/elidavidson/Desktop/hiloscope/src/UI/Ardupilot/FlightMode.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function FlightModes() {\n  // Initialize state for all flight modes\n  const [selectedFlightModes, setSelectedFlightModes] = useState(\n    Array(6).fill(null)\n  );\n\n  // Flight modes array\n  const flightModes = [\n    { label: 'Manual', value: 'manual' },\n    { label: 'Stabilize', value: 'stabilize' },\n    { label: 'Acro', value: 'acro' },\n    { label: 'Altitude Hold', value: 'altitude_hold' },\n    { label: 'Loiter', value: 'loiter' },\n    { label: 'RTL (Return to Launch)', value: 'rtl' },\n  ];\n\n  // Handle change in flight mode\n  const onFlightModeChange = (e, index) => {\n    const newSelectedFlightModes = [...selectedFlightModes];\n    newSelectedFlightModes[index] = e.target.value;\n    setSelectedFlightModes(newSelectedFlightModes);\n  };\n\n  return (\n    <div>\n      <div className=''>\n        {Array.from({ length: 6 }).map((_, index) => (\n          <div className='flex my-4' key={index}>\n            <h4 className='text-white'>Flight Mode {index + 1}</h4>\n            <select\n              className='mx-4 h-8'\n              value={selectedFlightModes[index]}\n              onChange={(e) => onFlightModeChange(e, index)}\n            >\n              <option value=\"\" disabled>\n                Select Flight Mode {index + 1}\n              </option>\n              {flightModes.map((mode) => (\n                <option key={mode.value} value={mode.value}>\n                  {mode.label}\n                </option>\n              ))}\n            </select>\n          </div>\n        ))}\n      </div>\n\n      <div className='border-2 bg-yellow-500 w-1/2 text-center'>\n        Save Modes\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}